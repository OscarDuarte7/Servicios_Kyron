{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Url http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/experiencia_laboral/": {
            "get": {
                "tags": [
                    "experiencia_laboral"
                ],
                "description": "get ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "experiencia_laboral"
                ],
                "description": "create ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ExperienciaLaboral"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/experiencia_laboral/{id}": {
            "get": {
                "tags": [
                    "experiencia_laboral"
                ],
                "description": "get ExperienciaLaboral by id",
                "operationId": "ExperienciaLaboralController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "experiencia_laboral"
                ],
                "description": "update the ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ExperienciaLaboral content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/ExperienciaLaboral"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "experiencia_laboral"
                ],
                "description": "delete the ExperienciaLaboral",
                "operationId": "ExperienciaLaboralController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/institucion/": {
            "get": {
                "tags": [
                    "institucion"
                ],
                "description": "get Institucion",
                "operationId": "InstitucionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "institucion"
                ],
                "description": "create Institucion",
                "operationId": "InstitucionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Institucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Institucion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/institucion/{id}": {
            "get": {
                "tags": [
                    "institucion"
                ],
                "description": "get Institucion by id",
                "operationId": "InstitucionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "institucion"
                ],
                "description": "update the Institucion",
                "operationId": "InstitucionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Institucion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Institucion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "institucion"
                ],
                "description": "delete the Institucion",
                "operationId": "InstitucionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "ExperienciaLaboral": {
            "title": "ExperienciaLaboral",
            "type": "object",
            "properties": {
                "Cargo": {
                    "type": "string"
                },
                "FechaDato": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaFinalizacion": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "FechaInicio": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InstitucionId": {
                    "$ref": "#/definitions/Institucion"
                },
                "PersonaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Validacion": {
                    "type": "boolean"
                },
                "Vigente": {
                    "type": "boolean"
                }
            }
        },
        "Institucion": {
            "title": "Institucion",
            "type": "object",
            "properties": {
                "Departamento": {
                    "type": "string"
                },
                "FechaDato": {
                    "$ref": "#/definitions/\u0026{time Time}"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Localidad": {
                    "type": "string"
                },
                "Municipio": {
                    "type": "string"
                },
                "NombreInstitucion": {
                    "type": "string"
                },
                "Pais": {
                    "type": "string"
                },
                "Vigente": {
                    "type": "boolean"
                }
            }
        }
    },
    "tags": [
        {
            "name": "experiencia_laboral",
            "description": "ExperienciaLaboralController oprations for ExperienciaLaboral\n"
        },
        {
            "name": "institucion",
            "description": "InstitucionController oprations for Institucion\n"
        }
    ]
}